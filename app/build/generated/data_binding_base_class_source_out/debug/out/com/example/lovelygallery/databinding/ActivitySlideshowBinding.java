// Generated by view binder compiler. Do not edit!
package com.example.lovelygallery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.lovelygallery.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySlideshowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton btnNext;

  @NonNull
  public final MaterialButton btnPlayPause;

  @NonNull
  public final MaterialButton btnPrevious;

  @NonNull
  public final LinearLayout controlsContainer;

  @NonNull
  public final MaterialToolbar slideshowToolbar;

  @NonNull
  public final ViewPager2 slideshowViewPager;

  private ActivitySlideshowBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton btnNext, @NonNull MaterialButton btnPlayPause,
      @NonNull MaterialButton btnPrevious, @NonNull LinearLayout controlsContainer,
      @NonNull MaterialToolbar slideshowToolbar, @NonNull ViewPager2 slideshowViewPager) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.btnPlayPause = btnPlayPause;
    this.btnPrevious = btnPrevious;
    this.controlsContainer = controlsContainer;
    this.slideshowToolbar = slideshowToolbar;
    this.slideshowViewPager = slideshowViewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySlideshowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySlideshowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_slideshow, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySlideshowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnNext;
      MaterialButton btnNext = ViewBindings.findChildViewById(rootView, id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btnPlayPause;
      MaterialButton btnPlayPause = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayPause == null) {
        break missingId;
      }

      id = R.id.btnPrevious;
      MaterialButton btnPrevious = ViewBindings.findChildViewById(rootView, id);
      if (btnPrevious == null) {
        break missingId;
      }

      id = R.id.controlsContainer;
      LinearLayout controlsContainer = ViewBindings.findChildViewById(rootView, id);
      if (controlsContainer == null) {
        break missingId;
      }

      id = R.id.slideshowToolbar;
      MaterialToolbar slideshowToolbar = ViewBindings.findChildViewById(rootView, id);
      if (slideshowToolbar == null) {
        break missingId;
      }

      id = R.id.slideshowViewPager;
      ViewPager2 slideshowViewPager = ViewBindings.findChildViewById(rootView, id);
      if (slideshowViewPager == null) {
        break missingId;
      }

      return new ActivitySlideshowBinding((ConstraintLayout) rootView, btnNext, btnPlayPause,
          btnPrevious, controlsContainer, slideshowToolbar, slideshowViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
